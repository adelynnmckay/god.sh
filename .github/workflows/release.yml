name: Release Workflow for god.sh

on:
  push:
    branches: [main]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: Checkout repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Needed to access full tag/commit history

      - name: Make script executable
        run: chmod +x god.sh

      - name: Get latest tag and determine next version
        id: version
        run: |
          latest=$(git tag --sort=-v:refname | grep '^v' | head -n 1)
          echo "Latest tag: $latest"

          if [[ "$latest" =~ ^v([0-9]+)\.([0-9]+)\.([0-9]+)$ ]]; then
            major="${BASH_REMATCH[1]}"
            minor="${BASH_REMATCH[2]}"
            patch="${BASH_REMATCH[3]}"
          else
            major=1
            minor=0
            patch=0
            latest=""
          fi

          if [ -z "$latest" ]; then
            commits=$(git log --pretty=format:"%s")
          else
            commits=$(git log "$latest"..HEAD --pretty=format:"%s")
          fi

          echo "Commits:"
          echo "$commits"

          bump="patch"
          if echo "$commits" | grep -q "#major"; then bump="major"
          elif echo "$commits" | grep -q "#minor"; then bump="minor"
          elif echo "$commits" | grep -q "#patch"; then bump="patch"
          fi

          echo "🔁 Bump type: $bump"

          case "$bump" in
            major)
              major=$((major + 1))
              minor=0
              patch=0
              ;;
            minor)
              minor=$((minor + 1))
              patch=0
              ;;
            patch)
              patch=$((patch + 1))
              ;;
          esac

          new_tag="v${major}.${minor}.${patch}"
          echo "New tag: $new_tag"
          echo "tag=$new_tag" >> $GITHUB_OUTPUT

      - name: Generate changelog
        id: changelog
        run: |
          last_tag=$(git tag --sort=-v:refname | grep '^v' | head -n 1 || echo "")
          if [ -z "$last_tag" ]; then
            log=$(git log --pretty=format:"- %s")
          else
            log=$(git log "$last_tag"..HEAD --pretty=format:"- %s")
          fi
          echo "changelog<<EOF" >> $GITHUB_OUTPUT
          echo "$log" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Create and push new tag
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git tag ${{ steps.version.outputs.tag }}
          git push origin ${{ steps.version.outputs.tag }}

      - name: Create GitHub release for
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ steps.version.outputs.tag }}
          name: ${{ steps.version.outputs.tag }}
          body: ${{ steps.changelog.outputs.changelog }}
          files: god.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
